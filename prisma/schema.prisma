generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum LeadStatus {
  NEW
  IN_PROGRESS
  CLOSED
}

enum LeadStage {
  INQUIRY
  NEGOTIATION
  FINALIZED
}

enum DealerStatus {
  ACTIVE
  INACTIVE
}

model Company {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  role        String        @default("admin")
  password    String
  executives  Executive[]
  dealers     Dealer[]
  leads       Lead[]
  products    Product[]
  categories  Category[]
  createdAt   DateTime      @default(now())
}

model Category {
  id            String        @id @default(uuid())
  name          String
  companyId     String
  @@index([companyId])
  company       Company       @relation(fields: [companyId], references: [id])
  subcategories Subcategory[]
  products      Product[]
  createdAt     DateTime      @default(now())
}

model Subcategory {
  id         String     @id @default(uuid())
  name       String
  categoryId String
  category   Category   @relation(fields: [categoryId], references: [id])
  products   Product[]
  createdAt  DateTime   @default(now())
}

model Product {
  id            String      @id @default(uuid())
  name          String
  companyId     String
  @@index([companyId])
  company       Company     @relation(fields: [companyId], references: [id])
  categoryId    String?
  category      Category?   @relation(fields: [categoryId], references: [id])
  @@index([categoryId])
  @@index([subcategoryId])
  subcategoryId String?
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  leads         Lead[]
  createdAt     DateTime    @default(now())
}

model Executive {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  role      String   @default("executive")
  companyId String
  @@index([companyId])
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  leads     Lead[]
  createdAt DateTime @default(now())
}

model Dealer {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      String   @default("dealer")
  gstNo     String   @unique
  state     String
  city      String
  pincode   String
  companyId String
  password  String
  status DealerStatus @default(INACTIVE)
  @@index([companyId])
  company   Company  @relation(fields: [companyId], references: [id])
  leads     Lead[]
  createdAt DateTime @default(now())
}

model Lead {
  id           String      @id @default(uuid())
  name         String
  email        String      @unique
  contact      String
  status       LeadStatus
  stage        LeadStage
  source       String
  companyId    String

  @@index([companyId])
  @@index([productId])
  company      Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
  city         String
  state        String
  productId    String?
  product      Product?    @relation(fields: [productId], references: [id])
  price        Float
  comments     String?
  followUps    FollowUp[]
  executiveId  String?

  @@index([executiveId])
  executive    Executive?  @relation(fields: [executiveId], references: [id])
  dealerId     String?
  dealer       Dealer?     @relation(fields: [dealerId], references: [id])
  @@index([dealerId])
  createdAt    DateTime    @default(now())
}

model FollowUp {
  id        String   @id @default(uuid())
  leadId    String   
  @@index([leadId])
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  status    String
  stage     String
  date      DateTime
  time      String
  message   String
  createdAt DateTime @default(now())
}
